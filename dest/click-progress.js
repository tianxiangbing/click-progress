!function(t,e){"function"==typeof define&&define.amd?define("click-progress",["$"],e):"object"==typeof exports?module.exports=e():t.ClickProgress=e(window.Zepto||window.jQuery||$)}(this,function(t){function e(){}return t.fn.ClickProgress=function(i){var n=[];return t(this).each(function(){var r=new e,s=t.extend({trigger:t(this)},i);r.init(s),n.push(r)}),n},e.prototype={init:function(e){this.settings=e,this.trigger=t(e.trigger),this.target=t(e.target),this.v=e.v||10,this.dv=this.v,this.a=e.a||1,this.da=this.a,this.change=e.change||"height",this.time=e.time||30,this.range="height"==this.change?t(this.target).height():t(this.target).width(),this.finish=this.target.children().first(),this.full=this.target[this.change](),this.power=1,this.bindEvent()},touch:function(e,i){function n(t){return i.call(this,t)}var r,s,o=this;"function"==typeof e&&(i=e),t(e).on("touchstart mousedown",function(t){t.preventDefault(),"press"==o.settings.event&&(s=setInterval(function(){i.call(this,t,"touch")},50))}).on("touchmove",function(t){t.preventDefault(),r=!0}).on("touchend mouseup",function(t){if(t.preventDefault(),!r){var e=i.call(this,t,"touch");e===!1&&(t.preventDefault(),t.stopPropagation())}r=!1,"press"==o.settings.event&&(clearInterval(s),o.settings.callback&&o.settings.callback.call(this,o.trigger,o.target,o.power))}),t(e).on("mousedown",n)},bindEvent:function(){var t=this;t.v=t.dv,this.touch(this.trigger,function(){return"press"!=t.settings.event&&(t.v=t.dv),t.setup(),t.settings.clicked&&t.settings.clicked(t.trigger,t.target,t.power),!1})},setup:function(){var t=this;if(!this.timer)if("press"==t.settings.event){var t=this;t.power=t.finish[t.change](),t.power+=t.v,t.power=Math.max(0,t.power),t.power>=t.full&&t.v>0&&(t.v=-1*t.v,t.power=t.full+t.v),t.power<=0&&t.v<0&&(t.v=-1*t.v,t.power=0+t.v),console.log("v:"+t.v,"p:"+t.power),t.finish[t.change](t.power)}else this.timer=setInterval(function(){t.animate()},this.time)},animate:function(){var t=this;t.power=t.finish[t.change](),t.power+=t.v,t.power=Math.max(0,t.power),t.power=Math.min(t.power,t.full),t.finish[t.change](t.power),t.power==t.full&&t.settings.callback&&t.settings.callback.call(this,t.trigger,t.target,t.power),t.settings.progress&&t.settings.progress(t.trigger,t.target,t.power),t.a=t.da+1*t.power/t.full,t.v-=t.a,t.power<=0&&(clearInterval(t.timer),t.timer=null)}},e});